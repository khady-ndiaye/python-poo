# D√©finition de la classe Vehicule
class Vehicule:
    def __init__(self, marque, modele, annee, prix):
        self.marque = marque
        self.modele = modele
        self.annee = annee
        self.prix = prix

    # M√©thode d'affichage des informations du v√©hicule
    def informationsVehicule(self):
        print(f"Marque : {self.marque}")
        print(f"Mod√®le : {self.modele}")
        print(f"Ann√©e : {self.annee}")
        print(f"Prix : {self.prix}‚Ç¨")

    # M√©thode pour d√©marrer le v√©hicule
    def demarrer(self):
        print("Attention, je roule.")

# D√©finition de la classe Voiture qui h√©rite de Vehicule
class Voiture(Vehicule):
    def __init__(self, marque, modele, annee, prix):
        super().__init__(marque, modele, annee, prix)  
        self.portes = 4  # Nombre de portes fix√© √† 4

    # Surcharge de la m√©thode informationsVehicule
    def informationsVehicule(self):
        super().informationsVehicule()
        print(f"Nombre de portes : {self.portes}")

    # Surcharge de la m√©thode demarrer
    def demarrer(self):
        print(f"La {self.marque} {self.modele} d√©marre... Vroum vroum !")

# D√©finition de la classe Moto qui h√©rite de Vehicule
class Moto(Vehicule):
    def __init__(self, marque, modele, annee, prix):
        super().__init__(marque, modele, annee, prix)
        self.roues = 2  # Nombre de roues fix√© √† 2

    # Surcharge de la m√©thode informationsVehicule
    def informationsVehicule(self):
        super().informationsVehicule()
        print(f"Nombre de roues : {self.roues}")

    # Surcharge de la m√©thode demarrer
    def demarrer(self):
        print(f"La moto {self.marque} {self.modele} d√©marre... Brrm Brrm !")


#  Instanciation d'une Voiture
voiture = Voiture("Tesla", "Model S", 2023, 79999)
print("üöó Informations de la voiture :")
voiture.informationsVehicule()
voiture.demarrer()

print("\n")

#  Instanciation d'une Moto
moto = Moto("Yamaha", "R1", 2022, 25000)
print(" Informations de la moto :")
moto.informationsVehicule()
moto.demarrer()
